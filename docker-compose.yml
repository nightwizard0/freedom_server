version: '3'
services:

  db:
    image: postgres:alpine
    restart: always
    container_name: nextcloud-db
    volumes:
      - ${DATABASE_VOLUME}:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=u_nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}

  nextcloud:
    image: nextcloud:fpm-alpine
    restart: always
    container_name: nextcloud
    volumes:
      - ${NEXTCLOUD_VOLUME}:/var/www/html
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=u_nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
    depends_on:
      - db
  
  web:
    image: nginx:alpine
    restart: always
    container_name: nginx
    ports:
      - 8080:80
    volumes:
      - ${NEXTCLOUD_VOLUME}:/var/www/html:ro
      - ./web/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - nextcloud

  openvpn:
    cap_add:
     - NET_ADMIN
    image: kylemanna/openvpn:latest
    container_name: openvpn
    ports:
     - "${OPENVPN_PORT}:1194/udp"
    restart: always
    volumes:
     - ${OPENVPN_DATA}:/etc/openvpn:rw

  dante:
    container_name: dante
    build: 
      context: ./dante
      args:
        username: ${DANTE_USER}
        password: ${DANTE_PASSWORD}
    ports:
      - "${DANTE_PORT}:1080"
    volumes:
      - ./dante/sockd.conf:/etc/sockd.conf:ro
    restart: always

  mtproto-proxy:
    image: telegrammessenger/proxy:latest
    container_name: mtproto-proxy
    ports:
      - "${MTPROTO_PORT}:443" 
    restart: always
    environment:
      - SECRET=${MTPROTO_SECRET}
      - SECRET_COUNT=1
      - WORKERS=2
